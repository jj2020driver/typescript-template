{"version":3,"sources":["redux/index.js","redux/reducers/login.js","pages/LogIn.tsx","pages/Home.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rootReducer","combineReducers","user","state","action","type","store","createStore","console","log","getState","subscribe","LogIn","formik","useFormik","initialValues","email","password","onSubmit","values","actions","a","Container","maxWidth","Box","py","style","to","mt","handleSubmit","TextField","id","name","onChange","handleChange","value","label","fullWidth","margin","Button","variant","disabled","isSubmitting","Boolean","submitCount","isValid","Home","Router","basename","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8MAIMA,EAAcC,YAAgB,CAClCC,KCL0B,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,WACH,OAAOD,EAAOF,KAChB,IAAK,cACH,OAAO,KACT,QACE,OAAOC,MDCPG,EAAQC,YAAYP,GAC1BQ,QAAQC,IAAIH,EAAMI,YAElBJ,EAAMK,WAAU,WACdH,QAAQC,IAAIH,EAAMI,eAGLJ,Q,4FEmDAM,EA1DD,WACZ,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,4BAAE,WAAOC,EAAQC,GAAf,SAAAC,EAAA,sDACRb,QAAQC,IAAIU,GADJ,2CAAF,qDAAC,KAKX,OACE,cAACG,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACD,EAAA,EAAD,CAAKE,MAAO,CAAEH,SAAU,KAAxB,UACE,cAAC,IAAD,CAAMI,GAAG,QAAT,kBACA,cAACH,EAAA,EAAD,CAAKI,GAAI,IAAT,SACE,uBAAMV,SAAUL,EAAOgB,aAAvB,UACE,cAACC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACL3B,KAAK,QACL4B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOM,OAAOH,MACrBoB,MAAM,gBACNC,WAAS,EACTC,OAAO,UAET,cAACR,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACL3B,KAAK,WACL4B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOM,OAAOF,SACrBmB,MAAM,WACNC,WAAS,EACTC,OAAO,UAET,cAACd,EAAA,EAAD,CAAKI,GAAI,IAAT,SACE,cAACW,EAAA,EAAD,CACElC,KAAK,SACLmC,QAAQ,YACRC,SACE5B,EAAO6B,cACNC,QAAO,OAAC9B,QAAD,IAACA,OAAD,EAACA,EAAQ+B,eAAiB/B,EAAOgC,QAL7C,mCChCDC,EAVF,WACX,OACE,cAACxB,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CAAME,GAAG,IAAT,yBCUOoB,EAbA,kBACb,cAAC,IAAD,CAAeC,SAAU,uBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,YCCOC,MARf,WACE,OACE,cAAC,IAAD,CAAU7C,MAAOA,EAAjB,SACE,cAAC,EAAD,OCKS8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.66172f7b.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux'\n\nimport { loginReducer } from './reducers/login'\n\nconst rootReducer = combineReducers({\n  user: loginReducer,\n})\n\nconst store = createStore(rootReducer)\nconsole.log(store.getState())\n\nstore.subscribe(() => {\n  console.log(store.getState())\n})\n\nexport default store\n","export const loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user\n    case 'REMOVE_USER':\n      return null\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { useFormik } from 'formik'\n\nconst LogIn = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: async (values, actions) => {\n      console.log(values)\n    },\n  })\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box py={4}>\n        <Box style={{ maxWidth: 550 }}>\n          <Link to=\"/home\">Home</Link>\n          <Box mt={2.5}>\n            <form onSubmit={formik.handleSubmit}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                label=\"Email address\"\n                fullWidth\n                margin=\"dense\"\n              />\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                label=\"Password\"\n                fullWidth\n                margin=\"dense\"\n              />\n              <Box mt={3.5}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  disabled={\n                    formik.isSubmitting ||\n                    (Boolean(formik?.submitCount) && !formik.isValid)\n                  }\n                >\n                  Log in\n                </Button>\n              </Box>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  )\n}\n\nexport default LogIn\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\n\nconst Home = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Box py={4}>\n        <Link to=\"/\">Log In</Link>\n      </Box>\n    </Container>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport LogIn from './pages/LogIn'\nimport Home from './pages/Home'\n\nconst Router = () => (\n  <BrowserRouter basename={'/typescript-template'}>\n    <Switch>\n      <Route exact path=\"/\">\n        <LogIn />\n      </Route>\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from './redux'\n\nimport Router from './Router'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}